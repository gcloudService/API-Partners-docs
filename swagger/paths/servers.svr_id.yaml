get:
  summary: 서버 상세 정보
  operationId: getServer
  description: |
    g클라우드 서버의 상세정보를 확인할 수 있습니다.

    ### cURL
    ```
    curl -X GET \
      https://cpapi.gabia.com/v1/servers/vm_1 \
      -H 'authorization: Bearer {YOUR-JWT-TOKEN}' \
      -H 'cache-control: no-cache' \
      -H 'content-type: application/x-www-form-urlencoded' \
    ```
  tags:
  - Servers
  parameters:
    - $ref: ../parameters/index.yaml#/svr_id
  produces:
    - application/json
  x-code-samples:
    - lang: PHP
      source: |
        <?php
        $curl = curl_init();

        curl_setopt_array($curl, array(
          CURLOPT_URL => "https://cpapi.gabia.com/v1/servers/vm_1",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "GET",
          CURLOPT_HTTPHEADER => array(
            "authorization: Bearer {YOUR-JWT-TOKEN}",
            "cache-control: no-cache",
            "content-type: application/x-www-form-urlencoded",
          ),
        ));

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);
    - lang: Node.js
      source: |
        var request = require("request");

        var options = {
          method: 'GET',
          url: 'https://cpapi.gabia.com/v1/servers/vm_1',
          headers: {
            'cache-control': 'no-cache',
            'content-type': 'application/x-www-form-urlencoded',
            'authorization': 'Bearer {YOUR-JWT-TOKEN}'
          }
        };

        request(options, function(error, response, body) {
          if (error) throw new Error(error);

          console.log(body);
        });
  responses:
    200:
      description: OK. 서버 상세 정보 조회 성공
      schema:
        $ref: ../definitions/Servers.yaml
    400:
      description: Bad request. 파라미터 오류
      schema:
        $ref: ../definitions/BadRequest.yaml
    401:
      description: Unauthorized. 인증 실패
      schema:
        $ref: ../definitions/Unauthorized.yaml
    403:
      description: Forbidden. 서버가 파트너/사용자의 자원이 아닌 경우
      schema:
        $ref: ../definitions/PermissionDeny.yaml
    404:
      description: Not Found. 존재하지 않음
      schema:
        $ref: ../definitions/NotFound.yaml
put:
  summary: 서버 정보 변경
  operationId: updateServer
  description: |
    g클라우드 서버의 자원명과 설명을 변경할 수 있습니다.

    ### cURL
    ```
    curl -X PUT \
      https://cpapi.gabia.com/v1/servers/vm_1 \
      -H 'authorization: Bearer {YOUR-JWT-TOKEN}' \
      -H 'cache-control: no-cache' \
      -H 'content-type: application/x-www-form-urlencoded' \
      -d 'name=new-name&desc=new-desc'
    ```

    ### Error Code
    - `-4112` : [API] 서버 상태 변경 오류. 이름/설명 변경 중복
  tags:
    - Servers
  parameters:
    - $ref: ../parameters/index.yaml#/svr_id
    - $ref: ../parameters/index.yaml#/svr_name
    - $ref: ../parameters/index.yaml#/svr_desc
  x-code-samples:
    - lang: PHP
      source: |
        <?php
        $curl = curl_init();

        curl_setopt_array($curl, array(
          CURLOPT_URL => "https://cpapi.gabia.com/v1/servers/vm_1",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "PUT",
          CURLOPT_POSTFIELDS => "name=new-name&desc=new-desc",
          CURLOPT_HTTPHEADER => array(
            "authorization: Bearer {YOUR-JWT-TOKEN}",
            "cache-control: no-cache",
            "content-type: application/x-www-form-urlencoded",
          ),
        ));

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);
    - lang: Node.js
      source: |
        var request = require("request");

        var options = {
            method: 'PUT',
            url: 'https://cpapi.gabia.com/v1/servers/vm_1',
            headers: {
                'cache-control': 'no-cache',
                'content-type': 'application/x-www-form-urlencoded',
                'authorization': 'Bearer {YOUR-JWT-TOKEN}'
            },
            form: {
              'name': 'new-name'
              'desc': 'new-desc'
            }
        };

        request(options, function(error, response, body) {
            if (error) throw new Error(error);

            console.log(body);
        });
  produces:
    - application/json
  responses:
    200:
      description: |
        OK. 기존 값과 동일한 수정 요청
      schema:
        $ref: ../definitions/Servers.yaml
    201:
      description: |
        Created. 서버 정보 변경 성공
      schema:
        $ref: ../definitions/Servers.yaml
    401:
      description: Unauthorized. 인증 실패. 인증 받지 않은 사용자
      schema:
        $ref: ../definitions/Unauthorized.yaml
    403:
      description: Forbidden. svr_id 서버가 파트너/사용자의 자원이 아닌 경우
      schema:
        $ref: ../definitions/PermissionDeny.yaml
    404:
      description: Not Found. svr_id 존재하지 않음
      schema:
        $ref: ../definitions/NotFound.yaml
delete:
  summary: 서버 삭제
  operationId: deleteServer
  description: |
    g클라우드 서버를 삭제할 수 있습니다.
    - 서버가 정지된 상태(status:01)인 경우에만 삭제할 수 있습니다.
    - 연결된 자원(g클라우드 스토리지, 공인 IP, 로드밸런서)이 없는 서버만 삭제할 수 있습니다.
    - 스냅샷이 생성되고 있는 상태(status:0)이거나 삭제되고 있는 상태(status:2)인 경우에는 g클라우드 서버(베이직/프리미엄)를 삭제할 수 없습니다.
    - 이미지가 생성되고 있는 상태(status:0)인 경우에는 g클라우드 서버(베이직/프리미엄/SSD)를 삭제할 수 없습니다.


    ### cURL
    ```
    curl -X DELETE \
      https://cpapi.gabia.com/v1/servers/vm_1 \
      -H 'authorization: Bearer {YOUR-JWT-TOKEN}' \
      -H 'cache-control: no-cache' \
      -H 'content-type: application/x-www-form-urlencoded' \
    ```

    ### Error Code
    - `-4131` : [API] 서버 삭제 오류. 서버 삭제 불가 상태. 정지 상태에서만 가능합니다.
    - `-4132` : [API] 서버 삭제 오류. 서버 삭제 불가 상태. 서버에 부착된 볼륨이 있습니다.
    - `-4133` : [API] 서버 삭제 오류. 서버 삭제 불가 상태. 서버에 부착된 IP가 있습니다.
    - `-4134` : [API] 서버 삭제 오류. 서버 삭제 불가 상태. 서버에 생성/삭제 중 상태의 스냅샷이 있습니다.
    - `-4135` : [API] 서버 삭제 오류. 서버 삭제 불가 상태. 서버에 생성 중 상태의 이미지가 있습니다.
  tags:
    - Servers
  parameters:
    - $ref: ../parameters/index.yaml#/svr_id
    # - in: query
    #   name: force
    #   required: false
    #   type: boolean
    #   enum: [true, false]
    #   description: "**`Deprecated`** ~~볼륨/IP 강제 해제 여부. 값이 없으면 false로 판단.~~\n- **true**:
    #     서버에 부착된 볼륨/IP가 존재하면 해제 후 서버를 삭제한다. 볼륨/IP 자원을 삭제하지 않는다.\n- **false**: 서버에
    #     부착된 볼륨/IP가 존재하면 서버를 삭제할 수 없고 **403**으로 응답한다. "
  x-code-samples:
    - lang: PHP
      source: |
        <?php
        $curl = curl_init();

        curl_setopt_array($curl, array(
          CURLOPT_URL => "https://cpapi.gabia.com/v1/servers/vm_1",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "DELETE",
          CURLOPT_HTTPHEADER => array(
            "authorization: Bearer {YOUR-JWT-TOKEN}",
            "cache-control: no-cache",
            "content-type: application/x-www-form-urlencoded",
          ),
        ));

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);
    - lang: Node.js
      source: |
        var request = require("request");

        var options = {
            method: 'DELETE',
            url: 'https://cpapi.gabia.com/v1/servers/vm_1',
            headers: {
                'cache-control': 'no-cache',
                'content-type': 'application/x-www-form-urlencoded',
                'authorization': 'Bearer {YOUR-JWT-TOKEN}'
            }
        };

        request(options, function(error, response, body) {
            if (error) throw new Error(error);

            console.log(body);
        });
  produces:
    - application/json
  responses:
    202:
      description: Accepted. 서버 삭제 요청(비동기) 성공
      schema:
        $ref: ../definitions/Servers.yaml
    400:
      description: Bad request. 파라미터 오류
      schema:
        $ref: ../definitions/BadRequest.yaml
    401:
      description: Unauthorized. 인증 실패
      schema:
        $ref: ../definitions/Unauthorized.yaml
    403:
      description: Forbidden. svr_id 파트너/사용자의 자원이 아닌 경우
      schema:
        $ref: ../definitions/PermissionDeny.yaml
    404:
      description: Not Found. svr_id 존재하지 않음
      schema:
        $ref: ../definitions/NotFound.yaml