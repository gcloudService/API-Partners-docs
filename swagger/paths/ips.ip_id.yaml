get:
  summary: 공인 IP 상세 정보
  description: |
    공인 IP의 상세정보를 확인할 수 있습니다.


    ### cURL
    ```
    curl -X GET \
      https://cpapi.gabia.com/v1/ips/pubIp_1 \
      -H 'authorization: Bearer {YOUR-JWT-TOKEN}' \
      -H 'cache-control: no-cache' \
      -H 'content-type: application/x-www-form-urlencoded' \
    ```
  tags:
    - PublicIps
  parameters:
    - $ref: ../parameters/index.yaml#/ip_id
  produces:
    - application/json
  x-code-samples:
    - lang: PHP
      source: |
        <?php
        $curl = curl_init();

        curl_setopt_array($curl, array(
          CURLOPT_PORT => "3000",
          CURLOPT_URL => "https://cpapi.gabia.com/v1/ips/pubIp_1",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "GET",
          CURLOPT_HTTPHEADER => array(
            "authorization: Bearer {YOUR-JWT-TOKEN}",
            "cache-control: no-cache",
            "content-type: application/x-www-form-urlencoded",
          ),
        ));

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);
    - lang: Node.js
      source: |
        var request = require("request");

        var options = {
          method: 'GET',
          url: 'https://cpapi.gabia.com/v1/ips/pubIp_1',
          headers: {
            'cache-control': 'no-cache',
            'content-type': 'application/x-www-form-urlencoded',
            'authorization': 'Bearer {YOUR-JWT-TOKEN}'
          }
        };

        request(options, function(error, response, body) {
          if (error) throw new Error(error);

          console.log(body);
        });
  responses:
    200:
      description: |
        OK. 공인 IP 상세정보 조회 성공
      schema:
        $ref: ../definitions/PublicIps.yaml
    400:
      description: Bad request. 파라미터 오류
      schema:
        $ref: ../definitions/BadRequest.yaml
    401:
      description: Unauthorized. 인증 실패
      schema:
        $ref: ../definitions/Unauthorized.yaml
    403:
      description: Forbidden. IP가 파트너/사용자의 자원이 아닌 경우
      schema:
        $ref: ../definitions/PermissionDeny.yaml
    404:
      description: Not Found. 존재하지 않음
      schema:
        $ref: ../definitions/NotFound.yaml
delete:
  summary: 공인 IP 삭제
  description: |-
    공인 IP를 삭제할 수 있습니다.
    - g클라우드 서버나 로드밸런서에 할당된 공인 IP는 해제 후 삭제할 수 있습니다.

    ### cURL
    ```
    curl -X DELETE \
      https://cpapi.gabia.com/v1/ips/pubIp_1 \
      -H 'authorization: Bearer {YOUR-JWT-TOKEN}' \
      -H 'cache-control: no-cache' \
      -H 'content-type: application/x-www-form-urlencoded' \
    ```

    ### Error Code
    - `-4311` : [API] 공인 IP 삭제 오류. 선택한 IP가 로드밸런서 서비스에 부착되어 있습니다.
    - `-4312` : [API] 공인 IP 삭제 오류. 선택한 IP가 서버 서비스에 부착되어 있습니다.
  tags:
    - PublicIps
  produces:
    - application/json
  parameters:
    - $ref: ../parameters/index.yaml#/ip_id
  x-code-samples:
    - lang: PHP
      source: |
        <?php
        $curl = curl_init();

        curl_setopt_array($curl, array(
          CURLOPT_PORT => "3000",
          CURLOPT_URL => "https://cpapi.gabia.com/v1/ips/pubIp_1",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "DELETE",
          CURLOPT_HTTPHEADER => array(
            "authorization: Bearer {YOUR-JWT-TOKEN}",
            "cache-control: no-cache",
            "content-type: application/x-www-form-urlencoded",
          ),
        ));

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);
    - lang: Node.js
      source: |
        var request = require("request");

        var options = {
          method: 'DELETE',
          url: 'https://cpapi.gabia.com/v1/ips/pubIp_1',
          headers: {
            'cache-control': 'no-cache',
            'content-type': 'application/x-www-form-urlencoded',
            'authorization': 'Bearer {YOUR-JWT-TOKEN}'
          }
        };

        request(options, function(error, response, body) {
          if (error) throw new Error(error);

          console.log(body);
        });
  responses:
    204:
      description: No Content. 공인 IP 삭제 성공
      schema:
        type: object
    400:
      description: Bad request. 파라미터 오류
      schema:
        $ref: ../definitions/BadRequest.yaml
    401:
      description: Unauthorized. 인증 실패
      schema:
        $ref: ../definitions/Unauthorized.yaml
    403:
      description: Forbidden. ip_id 파트너/사용자의 자원이 아닌 경우, IP가 자원에 할당된 경우
      schema:
        $ref: ../definitions/PermissionDeny.yaml
    404:
      description: Not Found. ip_id 존재하지 않음
      schema:
        $ref: ../definitions/NotFound.yaml