get:
  summary: NAS CIFS 인증 정보 상세 정보
  operationId: getNasCifsInfo
  description: |
    NAS CIFS 인증 상세 정보를 확인할 수 있습니다.

    ### cURL
    ```
    curl -X GET \
      https://cpapi.gabia.com/v1/nascifs/1 \
      -H 'authorization: Bearer {YOUR-JWT-TOKEN}' \
      -H 'cache-control: no-cache' \
      -H 'content-type: application/x-www-form-urlencoded' \
    ```
  tags:
    - NASCIFS
  produces:
    - application/json
  parameters:
    - $ref: ../parameters/index.yaml#/cifs_resource_id
  x-code-samples:
    - lang: PHP
      source: |
        <?php
        $curl = curl_init();

        curl_setopt_array($curl, array(
          CURLOPT_URL => "https://cpapi.gabia.com/v1/nascifs/1",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "GET",
          CURLOPT_HTTPHEADER => array(
            "authorization: Bearer {YOUR-JWT-TOKEN}",
            "cache-control: no-cache",
            "content-type: application/x-www-form-urlencoded",
          ),
        ));

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);
    - lang: Node.js
      source: |
        var request = require("request");

        var options = {
            method: 'GET',
            url: 'https://cpapi.gabia.com/v1/nascifs/1',
            headers: {
                'cache-control': 'no-cache',
                'content-type': 'application/x-www-form-urlencoded',
                'authorization': 'Bearer {YOUR-JWT-TOKEN}'
            }
        };

        request(options, function(error, response, body) {
            if (error) throw new Error(error);

            console.log(body);
        });
  responses:
    200:
      description: OK. NAS CIFS 상세정보 조회 성공
      schema:
        $ref: ../definitions/Cifs.yaml
    401:
      description: Unauthorized. 인증 실패
      schema:
        $ref: ../definitions/Unauthorized.yaml
    403:
      description: Forbidden. NAS CIFS가 파트너/사용자의 자원이 아닌 경우
      schema:
        $ref: ../definitions/PermissionDeny.yaml
    404:
      description: Not Found. 존재하지 않음
      schema:
        $ref: ../definitions/NotFound.yaml
put:
  summary: NAS CIFS 인증 비밀번호 변경
  operationId: updateNasCifs
  description: |
    CIFS 인증 비밀번호를 변경할 수 있습니다.
    - CIFS 인증 비밀번호 변경 시, 해당 스토리지 타입 내 모든 CIFS 타입의 NAS가 즉시 마운트 해제됩니다. 해제된 NAS를 재사용하기 위해서는 변경된 인증정보를 활용해 NAS를 다시 마운트해야 합니다.
    - 변경된 CIFS 인증 비밀번호를 서버가 인식하는데 최대 30초가 소요될 수 있습니다. 지속적으로 인식하지 못할 경우, 서버를 재부팅해 문제를 해결할 수 있습니다.


    ### cURL
    ```
    curl -X PUT \
      https://cpapi.gabia.com/v1/nascifs/1 \
      -H 'authorization: Bearer {YOUR-JWT-TOKEN}' \
      -H 'cache-control: no-cache' \
      -H 'content-type: application/x-www-form-urlencoded' \
      -d 'cifs_pw=NEWpass@$WORD1'

    ```

    ### Error Code
    - `-4752` : [API] NAS CIFS 변경 오류. CIFS 인증 비밀번호는 CIFS 인증 아이디를 포함할 수 없습니다.
    - `-4742` : [API] NAS CIFS 수정 오류. 내부 오류.
  tags:
    - NASCIFS
  produces:
    - application/json
  parameters:
    - $ref: ../parameters/index.yaml#/cifs_resource_id
    - in: formData
      name: cifs_pw
      required: true
      type: string
      pattern: ^(?=.*[a-zA-Z]{2,})(?=.*[0-9])(?=.*[~!@#^*_\-=`|()[\]:;"'<>,.?/])[a-zA-Z0-9~!@#^*_\-=`|()[\]:;"'<>,.?/]{8,14}$
      example: cifs
      description: |
        NAS CIFS 인증 비밀번호에 해당하는 매개변수입니다.
        - 비밀번호에 cifs_id 입력값이 포함될 수 없습니다.
        - 최소 2개의 알파벳, 최소 1개의 숫자, 최소 1개의 특수문자(? ! [ \ / ? ; : | * < > @ \ ' " ] ))를 포함하여 8자 이상 14자 이하로 입력할 수 있습니다.
      minLength: 8
      maxLength: 14
  x-code-samples:
    - lang: PHP
      source: |
        <?php
        $curl = curl_init();

        curl_setopt_array($curl, array(
          CURLOPT_URL => "https://cpapi.gabia.com/v1/nascifs/1",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "PUT",
          CURLOPT_POSTFIELDS => "cifs_pw=NEWpass@$WORD1",
          CURLOPT_HTTPHEADER => array(
            "authorization: Bearer {YOUR-JWT-TOKEN}",
            "cache-control: no-cache",
            "content-type: application/x-www-form-urlencoded",
          ),
        ));

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);
    - lang: Node.js
      source: |
        var request = require("request");

        var options = {
            method: 'PUT',
            url: 'https://cpapi.gabia.com/v1/nascifs/1',
            headers: {
                'cache-control': 'no-cache',
                'content-type': 'application/x-www-form-urlencoded',
                'authorization': 'Bearer {YOUR-JWT-TOKEN}'
            },
            form: {
              'cifs_pw': 'NEWpass@$WORD1'
            }
        };

        request(options, function(error, response, body) {
            if (error) throw new Error(error);

            console.log(body);
        });
  responses:
    201:
      description: Created. Nas CIFS 비밀번호 변경 성공
      schema:
        $ref: ../definitions/Cifs.yaml
    400:
      description: Bad request. 파라미터 오류
      schema:
        $ref: ../definitions/BadRequest.yaml
    401:
      description: Unauthorized. 인증 실패
      schema:
        $ref: ../definitions/Unauthorized.yaml
    403:
      description: Forbidden. NAS CIFS가 파트너/사용자의 자원이 아닌 경우
      schema:
        $ref: ../definitions/PermissionDeny.yaml
    404:
      description: Not Found. 존재하지 않는 CIFS 인증 정보.
      schema:
        $ref: ../definitions/NotFound.yaml
    409:
      description: Conflict. CIFS 변경 불가 상태.
      schema:
        $ref: ../definitions/Conflict.yaml