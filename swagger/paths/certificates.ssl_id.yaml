get:
  summary: SSL 인증서 상세 정보
  operationId: getCertificate
  description: |
    SSL 인증서 상세 정보를 확인할 수 있습니다.
    - SSL 인증서의 비밀키는 표시하지 않습니다.

    ### cURL
    ```
    curl -X GET \
      https://cpapi.gabia.com/v1/certificates/crt_1 \
      -H 'authorization: Bearer {YOUR-JWT-TOKEN}' \
      -H 'cache-control: no-cache' \
      -H 'content-type: application/json' \
    ```
  tags:
    - Certificates
  parameters:
    - $ref: ../parameters/index.yaml#/ssl_id
  produces:
    - application/json
  x-code-samples:
    - lang: PHP
      source: |
        <?php
        $curl = curl_init();

        curl_setopt_array($curl, array(
          CURLOPT_URL => "https://cpapi.gabia.com/v1/certificates/crt_1",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "GET",
          CURLOPT_HTTPHEADER => array(
            "authorization: Bearer {YOUR-JWT-TOKEN}",
            "cache-control: no-cache",
            "content-type: application/json",
          ),
        ));

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);
    - lang: Node.js
      source: |
        var request = require("request");

        var options = {
          method: 'GET',
          url: 'https://cpapi.gabia.com/v1/certificates/crt_1',
          headers: {
            'cache-control': 'no-cache',
            'content-type': 'application/json',
            'authorization': 'Bearer {YOUR-JWT-TOKEN}'
          }
        };

        request(options, function(error, response, body) {
          if (error) throw new Error(error);

          console.log(body);
        });
  responses:
    200:
      description: OK. SSL 인증서 상세 정보 조회 성공
      schema:
        $ref: ../definitions/Certificates.yaml
    400:
      description: Bad request. 파라미터 오류
      schema:
        $ref: ../definitions/BadRequest.yaml
    401:
      description: Unauthorized. 인증 실패
      schema:
        $ref: ../definitions/Unauthorized.yaml
    403:
      description: Forbidden. 파트너/사용자의 자원이 아닌 경우
      schema:
        $ref: ../definitions/PermissionDeny.yaml
    404:
      description: Not Found. 존재하지 않음
      schema:
        $ref: ../definitions/NotFound.yaml
put:
  summary: SSL 인증서 변경
  operationId: updateCertificate
  description: |
    SSL 인증서를 변경할 수 있습니다.
    - SSL 인증서명과 설명을 변경할 수 있습니다.
    - SSL 인증서 비밀키, 인증서, 인증서 체인을 변경할 수 있습니다.
    ### cURL
    ```
    curl -X PUT \
      https://cpapi.gabia.com/v1/certificates/crt_1 \
      -H 'authorization: Bearer {YOUR-JWT-TOKEN}' \
      -H 'cache-control: no-cache' \
      -H 'content-type: application/json' \
      -d {
        "name": "ssl-modi",
        "desc": "SSL Cert Modify Test",
        "priv_key": "-----BEGIN RSA PRIVATE KEY-----.....-----END RSA PRIVATE KEY-----",
        "cert": "-----BEGIN CERTIFICATE-----.....-----END CERTIFICATE-----",
        "chain": "-----BEGIN CERTIFICATE-----.....-----END CERTIFICATE-----.....-----BEGIN CERTIFICATE-----.....-----END CERTIFICATE-----"
      }
    ```
    ### Error Code
    - `-5211`: [API] SSL 인증서 변경 오류. SSL 인증서명 중복
    - `-5212`: [API] SSL 인증서 변경 오류. 비밀키 형식이 잘못됐습니다.
    - `-5213`: [API] SSL 인증서 변경 오류. 인증서 형식이 잘못됐습니다.
    - `-5214`: [API] SSL 인증서 변경 오류. 인증서 체인 형식이 잘못됐습니다.
    - `-5215`: [API] SSL 인증서 변경 오류. 비밀키와 인증서가 일치하지 않습니다.
    - `-5216`: [API] SSL 인증서 변경 오류. 이미 등록된 인증서입니다.
  tags:
    - Certificates
  parameters:
    - in: body
      name: certificate
      schema:
        type: object
        properties:
          name:
            description: |
              SSL 인증서명에 해당하는 매개변수입니다.
              - 이용자의 다른 SSL 인증서명과 중복될 수 없습니다.
              - 영문, 숫자, 하이픈(-), 언더바(_)를 사용하여 1자 이상 16자 이하로만 입력할 수 있습니다.
            type: string
            minLength: 1
            maxLength: 16
            pattern: ^[\w\-]{1,16}$
            example: ssl-test
          desc:
            description: |
              SSL 인증서 설명에 해당하는 매개변수입니다.
              - 일부 특수문자( ( ? ! [ \ / ? ; : | * < > @ \ ' " ] ) )를 제외한 0자 이상 100자 이하의 문자(한글, 영문, 숫자, 특수문자 등)로 입력할 수 있습니다.
            type: string
            minLength: 0
            maxLength: 100
            pattern: ^((?![\/?;:|*<>@\\\'\"]).){0,100}$
            example: SSL Cert Test
          priv_key:
            description: |
              SSL 인증서의 비밀키에 해당하는 매개변수입니다.
              - RSA 알고리즘을 통해 생성된 비밀키만 사용할 수 있습니다.
              - 비밀키가 암호화된 경우, 암호화를 해제한 후 등록할 수 있습니다.
              - cert 를 변경하는 경우, 반드시 함께 제공해야 하는 값입니다.
            type: string
            example: -----BEGIN RSA PRIVATE KEY-----.....-----END RSA PRIVATE KEY-----
          cert:
            description: |
              SSL 인증서의 인증서에 해당하는 매개변수입니다.
              - priv_key 를 변경하는 경우, 반드시 함께 제공해야 하는 값입니다.
            type: string
            example: -----BEGIN CERTIFICATE-----.....-----END CERTIFICATE-----
          chain:
            description: |
              SSL 인증서의 인증서 체인에 해당하는 매개변수입니다.
              - 신뢰 수준이 낮은 기관에서 발급한 인증서는 인증서 체인이 없을 경우 일부 웹브라우저에서 인식하지 못할 수 있습니다.
              - 인증서 체인 값을 제거하기 위해 빈 문자열을 제공할 수 있습니다.
            type: string
            example: -----BEGIN CERTIFICATE-----......-----END CERTIFICATE------.....-----BEGIN CERTIFICATE-----......-----END CERTIFICATE------
  produces:
    - application/json
  x-code-samples:
    - lang: PHP
      source: |
        <?php
        $curl = curl_init();

        $data_string = json_encode(array(
          "name" => "ssl-modi",
          "desc" => "SSL Cert Modify Test",
          "priv_key" => "-----BEGIN RSA PRIVATE KEY-----.....-----END RSA PRIVATE KEY-----",
          "cert" => "-----BEGIN CERTIFICATE-----.....-----END CERTIFICATE-----",
          "chain" => "-----BEGIN CERTIFICATE-----......-----END CERTIFICATE------.....-----BEGIN CERTIFICATE-----......-----END CERTIFICATE------"
          )
        ));

        curl_setopt_array($curl, array(
          CURLOPT_URL => "https://cpapi.gabia.com/v1/certificates/crt_1",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "PUT",
          CURLOPT_POSTFIELDS => $data_string,
          CURLOPT_HTTPHEADER => array(
            "authorization: Bearer {YOUR-JWT-TOKEN}",
            "cache-control: no-cache",
            "content-type: application/json",
          ),
        ));

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);
    - lang: Node.js
      source: |
        var request = require("request");

        var options = {
          method: 'PUT',
          url: 'https://cpapi.gabia.com/v1/certificates/crt_1',
          headers: {
            'cache-control': 'no-cache',
            'content-type': 'application/json',
            'authorization': 'Bearer {YOUR-JWT-TOKEN}'
          },
          body: {
            "name": "ssl-modi",
            "desc": "SSL Cert Modify Test",
            "priv_key": "-----BEGIN RSA PRIVATE KEY-----.....-----END RSA PRIVATE KEY-----",
            "cert": "-----BEGIN CERTIFICATE-----.....-----END CERTIFICATE-----",
            "chain": "-----BEGIN CERTIFICATE-----......-----END CERTIFICATE------.....-----BEGIN CERTIFICATE-----......-----END CERTIFICATE------"
          }
        };

        request(options, function(error, response, body) {
          if (error) throw new Error(error);

          console.log(body);
        });
  responses:
    201:
      description: Ok. SSL 인증서 변경 성공
      schema:
        $ref: ../definitions/Certificates.yaml
    400:
      description: Bad request. 파라미터 오류
      schema:
        $ref: ../definitions/BadRequest.yaml
    401:
      description: Unauthorized. 인증 실패
      schema:
        $ref: ../definitions/Unauthorized.yaml
    403:
      description: Forbidden. 파트너/사용자의 자원이 아닌 경우
      schema:
        $ref: ../definitions/PermissionDeny.yaml
    404:
      description: Not Found. 존재하지 않음
      schema:
        $ref: ../definitions/NotFound.yaml
delete:
  summary: SSL 인증서 삭제
  operationId: deleteCertificate
  description: |
    SSL 인증서를 삭제할 수 있습니다.
    - 로드밸런서에 설정된 SSL 인증서는 설정을 해제한 후 삭제할 수 있습니다.
    ### cURL
    ```
    curl -X DELETE \
      https://cpapi.gabia.com/v1/certificates/crt_1 \
      -H 'authorization: Bearer {YOUR-JWT-TOKEN}' \
      -H 'cache-control: no-cache' \
      -H 'content-type: application/json' \
    ```
    ### Error Code
    - `-5221`: [API] SSL 인증서 삭제 오류. SSL 인증서를 사용 중인 자원이 있습니다. 자원을 모두 해제하고 삭제해야 합니다.
  tags:
    - Certificates
  parameters:
    - $ref: ../parameters/index.yaml#/ssl_id
  produces:
    - application/json
  x-code-samples:
    - lang: PHP
      source: |
        <?php
        $curl = curl_init();

        curl_setopt_array($curl, array(
          CURLOPT_URL => "https://cpapi.gabia.com/v1/certificates/crt_1",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "DELETE",
          CURLOPT_HTTPHEADER => array(
            "authorization: Bearer {YOUR-JWT-TOKEN}",
            "cache-control: no-cache",
            "content-type: application/json",
          ),
        ));

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);
    - lang: Node.js
      source: |
        var request = require("request");

        var options = {
          method: 'DELETE',
          url: 'https://cpapi.gabia.com/v1/certificates/crt_1',
          headers: {
            'cache-control': 'no-cache',
            'content-type': 'application/json',
            'authorization': 'Bearer {YOUR-JWT-TOKEN}'
          }
        };

        request(options, function(error, response, body) {
          if (error) throw new Error(error);

          console.log(body);
        });
  responses:
    204:
      description: No Content. SSL 인증서 삭제 성공
      schema:
        type: object
    400:
      description: Bad request. 파라미터 오류
      schema:
        $ref: ../definitions/BadRequest.yaml
    401:
      description: Unauthorized. 인증 실패
      schema:
        $ref: ../definitions/Unauthorized.yaml
    403:
      description: Forbidden. 파트너/사용자의 자원이 아닌 경우
      schema:
        $ref: ../definitions/PermissionDeny.yaml
    404:
      description: Not Found. 존재하지 않음
      schema:
        $ref: ../definitions/NotFound.yaml