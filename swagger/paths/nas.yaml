post:
  summary: NAS 생성
  operationId: createNas
  description: |
    NAS를 생성할 수 있습니다.
    - 네트워크를 통해 다수의 g클라우드 서버(베이직/프리미엄/SSD)에 연결하여 사용할 수 있습니다.
    - 0.1TB 단위로 최소 1TB에서 최대 10TB까지 생성할 수 있습니다.
    - 파일 시스템 프로토콜에 따라 2가지 타입으로 NAS를 생성할 수 있습니다.
      - NFS: Linux를 OS로 사용하는 서버에 NAS를 연결하고자 할 경우 NFS 프로토콜을 사용하는 타입의 NAS를 생성할 수 있습니다. 
      - CIFS: Windows를 OS로 사용하는 서버에 NAS를 연결하고자 경우 CIFS 프로토콜을 사용하는 타입의 NAS 생성할 수 있습니다.
    - CIFS를 파일 시스템 프로토콜로 사용하는 NAS의 경우, [CIFS 인증정보 생성](#operation/createNasCifs)을 통해 접근 제어를 위한 CIFS 인증정보(ID, 비밀번호)를 생성할 수 있습니다.
    - NAS 생성 이후, 서버에 원격 접속해 NAS를 서버에 마운트해야 NAS를 사용할 수 있습니다.
      - [Linux 서버에 NAS 마운트 하기](https://customer.gabia.com/manuals/detail.php?seq_no=2703)
      - [Windows 서버에 NAS 마운트 하기](https://customer.gabia.com/manuals/detail.php?seq_no=1857)

    ### cURL
    ```
    curl -X POST \
      https://cpapi.gabia.com/v1/nas \
      -H 'authorization: Bearer {YOUR-JWT-TOKEN}' \
      -H 'cache-control: no-cache' \
      -H 'content-type: application/x-www-form-urlencoded' \
      -d 'user_id=company_777&name=image1&desc=test-image&snap_id=snap_1'
      -d 'user_id=company_777&name=nas-test1&desc=nas-backup&mount_path=mount1&protocol=cifs&size=2'
    ```

    ### Error Code
    - `-4711` : [API] NAS 생성 오류. NAS명 중복
    - `-4712` : [API] NAS 생성 오류. NAS 마운트패쓰명 중복
    - `-4716` : [API] NAS 생성 오류. 내부 오류.
    - `-4717` : [API] NAS 생성 오류. 자원이 부족합니다.

  tags:
    - NAS
  produces:
    - application/json
  parameters:
    - $ref: ../parameters/index.yaml#/user_id
    - $ref: ../parameters/index.yaml#/nas_name
    - $ref: ../parameters/index.yaml#/nas_desc
    - in: formData
      name: mount_path
      required: true
      type: string
      pattern: ^[a-z]{1}([\w]){0,15}$
      example: mount1
      description: |
        NAS 마운트 시, 경로 지정에 사용될 마운트 패스 설정하는 매개변수입니다.
        - 이용자의 다른 NAS의 마운트 패스와 중복될 수 없습니다.
        - 영문, 숫자, 하이픈(-), 언더바(_)를 사용하여 1자 이상 16자 이하로만 입력할 수 있습니다.
        - 마운트 패스는 언더바(_)로 시작할 수 없습니다.
    - in: formData
      name: protocol
      required: true
      type: string
      enum: [nfs, cifs]
      example: cifs
      description: |
        파일 시스템 프로토콜을 기준으로 NAS의 타입을 설정하는 매개변수입니다.
        - NFS: OS가 Linux인 서버와 연결해 사용할 수 있는 NAS 타입으로 설정하는 입력값입니다.
        - CIFS: OS가 Windows인 서버와 연결해 사용할 수 있는 NAS 타입으로 설정하는 입력값입니다.
    - in: formData
      name: size
      required: true
      type: float
      minimum: 1.0
      maximum: 10.0
      example: 1.5
      description: |
        NAS의 용량을 선택하는 매개변수로 입력값의 단위는 TB입니다.
        - 1.0 이상 10.0 이하의 값 중에서 선택할 수 있으며, 입력 값은 소수점 첫번째 자리까지만 입력할 수 있습니다.
  x-code-samples:
    - lang: PHP
      source: |
        <?php
        $curl = curl_init();

        curl_setopt_array($curl, array(
          CURLOPT_URL => "https://cpapi.gabia.com/v1/nas",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "POST",
          CURLOPT_POSTFIELDS => "user_id=company_777&name=nas-test1&desc=nas-backup&mount_path=mount1&protocol=cifs&size=2",
          CURLOPT_HTTPHEADER => array(
            "authorization: Bearer {YOUR-JWT-TOKEN}",
            "cache-control: no-cache",
            "content-type: application/x-www-form-urlencoded",
          ),
        ));

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);
    - lang: Node.js
      source: |
        var request = require("request");

        var options = {
            method: 'POST',
            url: 'https://cpapi.gabia.com/v1/nas',
            headers: {
                'cache-control': 'no-cache',
                'content-type': 'application/x-www-form-urlencoded',
                'authorization': 'Bearer {YOUR-JWT-TOKEN}'
            },
            form: {
              user_id: 'company_777',
              name: 'nas-test',
              desc: 'nas-backup',
              mount_path: 'mount1',
              protocol: 'cifs',
              size: 2
            }
        };

        request(options, function(error, response, body) {
            if (error) throw new Error(error);

            console.log(body);
        });
  responses:
    202:
      description: Accepted. NAS 생성 요청 성공
      schema:
        $ref: ../definitions/Nas.yaml
    400:
      description: Bad request. 파라미터 오류
      schema:
        $ref: ../definitions/BadRequest.yaml
    401:
      description: Unauthorized. 인증 실패
      schema:
        $ref: ../definitions/Unauthorized.yaml
get:
  summary: NAS 조회
  operationId: geteNasList
  description: |
    이용자가 소유한 NAS를 조회할 수 있습니다.

    ### cURL
    ```
    curl -X GET \
      https://cpapi.gabia.com/v1/nas \
      -H 'authorization: Bearer {YOUR-JWT-TOKEN}' \
      -H 'cache-control: no-cache' \
      -H 'content-type: application/x-www-form-urlencoded' \
    ```
  tags:
    - NAS
  produces:
    - application/json
  parameters:
    - name: q
      in: query
      type: string
      description: |
        조회 조건을 설정하는 매개변수 입니다.
        - 사용할 수 있는 조건
          - user_id: 이용자 ID
          - nas_id: NAS ID
          - name: NAS 자원명
          - protocol: NAS 파일 시스템 프로토콜
          - size: NAS 용량(TB)
          - status: NAS 현재 상태 값
          - mount_path: NAS 마운트패스
          - private_ip: NAS 사설 IP
        - 검색하려는 대상과 조회 조건의 값이 정확히 일치되는 경우에만 조회할 수 있습니다.
        - 사용할 수 있는 조회 조건이 2개 이상일 경우, 적용하고자 하는 조건을 모두 입력하여 모든 조건에 만족하는 값을 조회할 수 있습니다.
        - 조회 조건 값에 대한 정보는 각 기능에 대한 응답(Responses)를 참고해 입력할 수 있습니다.
        - 예시) /v1/nas?q=user_id=company_777,protocol=cifs
    - name: order
      in: query
      type: string
      description: |
        조회 결과에 대한 정렬 조건을 설정하는 매개변수 입니다.
        - 정렬 가능 대상
          - nas_id: g클라우드 서버 ID
          - user_id: 이용자 ID
          - name: NAS 자원명
          - desc: NAS에 대한 설명
          - size: NAS 용량(TB)
          - protocol: NAS 파일 시스템 프로토콜
          - regdate: NAS 생성일
          - updatedate: NAS 수정일
        - 사용할 수 있는 정렬 조건이 2개 이상일 경우, 적용하고자 하는 조건을 모두 입력할 수 있으며 앞에 입력된 조건의 우선 순위가 높습니다.
        - 정렬의 기본 값은 오름차순 정렬입니다. 정렬 조건의 앞에 –를 붙일 경우, 내림차순으로 정렬할 수 있습니다.
        - 예시) /v1/nas?order=user_id,-protocol
    # - $ref: ../parameters/index.yaml#/collectionPaging

  x-code-samples:
    - lang: PHP
      source: |
        <?php
        $curl = curl_init();

        curl_setopt_array($curl, array(
          CURLOPT_URL => "https://cpapi.gabia.com/v1/nas",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "GET",
          CURLOPT_HTTPHEADER => array(
            "authorization: Bearer {YOUR-JWT-TOKEN}",
            "cache-control: no-cache",
            "content-type: application/x-www-form-urlencoded",
          ),
        ));

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);
    - lang: Node.js
      source: |
        var request = require("request");

        var options = {
            method: 'GET',
            url: 'https://cpapi.gabia.com/v1/nas',
            headers: {
                'cache-control': 'no-cache',
                'content-type': 'application/x-www-form-urlencoded',
                'authorization': 'Bearer {YOUR-JWT-TOKEN}'
            }
        };

        request(options, function(error, response, body) {
            if (error) throw new Error(error);

            console.log(body);
        });
  responses:
    200:
      description: OK. Nas 목록 조회 성공
      schema:
        type: array
        description: Nas 목록
        items:
          $ref: ../definitions/Nas.yaml
    401:
      description: Unauthorized. 인증 실패
      schema:
        $ref: ../definitions/Unauthorized.yaml
