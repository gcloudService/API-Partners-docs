post:
  summary: 토큰 발급
  description: |-
    파트너의 Secret key를 통해 JWT를 발급받을 수 있습니다.
    - 가비아 클라우드사업부로부터 파트너 승인이 완료된 파트너만 JWT를 발급받을 수 있습니다.
    - JWT는 2시간 동안 유효하며, 만료 후에는 재발급 받을 수 있습니다.
    - 토큰 발급을 제외한 모든 요청은 Header에 유효한 JWT를 포함해야 합니다.

    ### cURL
    ```
    curl -X POST \
      https://cpapi.gabia.com/v1/auth/api \
      -H 'cache-control: no-cache' \
      -H 'content-type: application/x-www-form-urlencoded' \
      -d 'partner_id={YOUR-ID}&secret={YOUR-SECRET-KEY}'
    ```

    ### Error Code
    - `-4901` : [API] 파트너 토큰 발급 오류. 존재하지 않는 파트너.
    - `-4902` : [API] 파트너 토큰 발급 오류. 미승인 상태의 파트너.
    - `-4903` : [API] 파트너 토큰 발급 오류. 유효하지 않은 secret key.
  tags:
    - Token
  produces:
    - application/json
  x-code-samples:
    - lang: PHP
      source: |
        <?php
        $curl = curl_init();

        curl_setopt_array($curl, array(
          CURLOPT_PORT => "3000",
          CURLOPT_URL => "https://cpapi.gabia.com/v1/auth/api",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "POST",
          CURLOPT_POSTFIELDS => "partner_id={YOUR-ID}&secret={YOUR-SECRET-KEY}",
          CURLOPT_HTTPHEADER => array(
            "cache-control: no-cache",
            "content-type: application/x-www-form-urlencoded",
          ),
        ));

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);
    - lang: Node.js
      source: |
        var request = require("request");

        var options = {
          method: 'POST',
          url: 'https://cpapi.gabia.com/v1/auth/api',
          headers: {
            'cache-control': 'no-cache',
            'content-type': 'application/x-www-form-urlencoded',
            'authorization': 'Bearer {YOUR-JWT-TOKEN}'
          },
          form: {
            'partner_id': '{YOUR-ID}',
            'secret': '{YOUR-SECRET-KEY}'
          }
        };

        request(options, function(error, response, body) {
          if (error) throw new Error(error);

          console.log(body);
        });
  parameters:
    - name: partner_id
      description: 파트너의 ID에 해당하는 매개변수입니다.
      in: formData
      required: true
      type: string
      example: biz_1004
    - name: secret
      description: 파트너 승인 시 발급받은 Secret key에 해당하는 매개변수입니다.
      in: formData
      required: true
      type: string
      format: byte
      example: Y2YxZWUyY2UtMTk4
  responses:
    200:
      description: OK. 토큰 발급 성공
      schema:
        type: object
        properties:
          token:
            type: string
            description: Secret key를 통해 발급된 JWT에 해당하는 속성입니다.
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbmNyeXB0IjoiYTFhYzcxMmIwZDUyY2UxNDY5ZDM5OTQzODFiMjg4MDk3MzQwNGQ1Mjc0NzMzYWNlOTZjZDY0ODNiZmMzNzU0OGNlN2JhM2U2YmFhNmZiNzJjZDZlYTY0MWI3M2NmMWY2MGI0NTA4NDFkN2Q1MjgwYmU2MDFiZDkyOTNiZjAyYzAiLCJpYXQiOjE1MDUzNzM5MDYsImV4cCI6MTUwNTQwOTkwNiwiaXNzIjoiZ2Nsb3VkIiwic3ViIjoic29ja2V0In0.kGVMLlMfhYWyjCP1AmsmFfLmQmUH0JVuDrX0wm963YQ
    401:
      description: Unauthorized. 인증 실패
      schema:
        type: object
        properties:
          msg:
            type: string
            description: 에러 메세지
            example: "'secret' is must required. Your input 'secret': ''."
          code:
            type: integer
            description: 에러 코드
            example: -621
          desc:
            type: string
            description: 에러 설명
            example: "[Auth] REST API 오류. 필수값이 없거나 유효하지 않습니다."