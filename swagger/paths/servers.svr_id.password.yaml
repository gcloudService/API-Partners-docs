put:
  summary: 서버 비밀번호 변경
  operationId: updateServerPassword
  description: |
    g클라우드 서버 운영체제의 비밀번호를 새로 발급받을 수 있습니다.
    - g클라우드 서버의 상태 값이 시작된 상태(status: 03)일 때만 비밀번호를 재발급 받을 수 있습니다.
    - 비밀번호 재발급 이후에는 g클라우드 서버를 재시작(reboot)해야 변경된 비밀번호가 적용됩니다.
    - 서버 운영체제 비밀번호는 서버 생성 시와 서버 비밀번호 변경 요청 시에만 확인할 수 있습니다. 비밀번호를 잊었을 경우, 서버 비밀번호 변경 기능을 통해 비밀번호를 재발급 받아야만 서버에 접속할 수 있습니다.
    - 서버 비밀번호는 파트너가 등록한 Callback URL로 전송됩니다.
    - g클라우드 서버(베이직/프리미엄)의 경우, 서버 생성 후 최대 10분간 비밀번호 재발급이 제한될 수 있습니다.


    ### cURL
    ```
    curl -X PUT \
      https://cpapi.gabia.com/v1/servers/vm_1/password \
      -H 'authorization: Bearer {YOUR-JWT-TOKEN}' \
      -H 'cache-control: no-cache' \
      -H 'content-type: application/x-www-form-urlencoded' \
    ```

    ### Error Code
    - `-4171` : [API] 서버 비밀번호 변경 오류. 서버 변경 불가 상태. 정지/운영 상태에서만 가능합니다.
    - `-4172` : [API] 서버 비밀번호 변경 오류. 서버 변경 불가 상태.
    - `-4173` : [API] 서버 비밀번호 변경 오류. 서버 비밀번호 변경 진행중.
    - `-4175` : [API] 서버 비밀번호 변경 오류. 내부 오류.

  tags:
    - Servers
  parameters:
    - $ref: ../parameters/index.yaml#/svr_id
  produces:
    - application/json
  x-code-samples:
    - lang: PHP
      source: |
        <?php
        $curl = curl_init();

        curl_setopt_array($curl, array(
          CURLOPT_URL => "https://cpapi.gabia.com/v1/servers/vm_1/password",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "PUT",
          CURLOPT_HTTPHEADER => array(
            "authorization: Bearer {YOUR-JWT-TOKEN}",
            "cache-control: no-cache",
            "content-type: application/x-www-form-urlencoded",
          ),
        ));

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);
    - lang: Node.js
      source: |
        var request = require("request");

        var options = {
          method: 'PUT',
          url: 'https://cpapi.gabia.com/v1/servers/vm_1/password',
          headers: {
            'cache-control': 'no-cache',
            'content-type': 'application/x-www-form-urlencoded',
            'authorization': 'Bearer {YOUR-JWT-TOKEN}'
          }
        };

        request(options, function(error, response, body) {
          if (error) throw new Error(error);

          console.log(body);
        });
  responses:
    202:
      description: Accepted. 비밀번호 변경 요청 성공
      schema:
        $ref: ../definitions/Servers.yaml
    400:
      description: Bad request. 파라미터 오류
      schema:
        $ref: ../definitions/BadRequest.yaml
    401:
      description: Unauthorized. 인증 실패
      schema:
        $ref: ../definitions/Unauthorized.yaml
    403:
      description: Forbidden. svr_id 파트너/사용자의 자원이 아닌 경우
      schema:
        $ref: ../definitions/PermissionDeny.yaml
    404:
      description: Not Found. svr_id 존재하지 않음
      schema:
        $ref: ../definitions/NotFound.yaml