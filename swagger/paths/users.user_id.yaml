delete:
  summary: 이용자 삭제
  description: |
    이용자 계정을 삭제할 수 있습니다.
    - 이용자가 소유한 모든 자원은 함께 삭제됩니다.

    ### cURL
    ```
    curl -X DELETE \
      https://cpapi.gabia.com/v1/users/company_777 \
      -H 'authorization: Bearer {YOUR-JWT-TOKEN}' \
      -H 'cache-control: no-cache' \
      -H 'content-type: application/x-www-form-urlencoded' \
    ```

    ### Error Code
    - `-3851` : [API] 이용자 등록 오류. 이미 존재하는 이용자.
  tags:
    - Users
  produces:
    - application/json
  parameters:
    - name: user_id
      description: 이용자의 ID에 해당하는 매개변수입니다.
      in: path
      required: true
      type: string
      minLength: 3
      maxLength: 16
      pattern: ^[\w\-]$
  x-code-samples:
    - lang: PHP
      source: |
        <?php
        $curl = curl_init();

        curl_setopt_array($curl, array(
          CURLOPT_PORT => "3000",
          CURLOPT_URL => "https://cpapi.gabia.com/v1/users/company_777",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "DELETE",
          CURLOPT_HTTPHEADER => array(
            "authorization: Bearer {YOUR-JWT-TOKEN}",
            "cache-control: no-cache",
            "content-type: application/x-www-form-urlencoded",
          ),
        ));

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);
    - lang: Node.js
      source: |
        var request = require("request");

        var options = {
          method: 'DELETE',
          url: 'https://cpapi.gabia.com/v1/users/company_777',
          headers: {
            'cache-control': 'no-cache',
            'content-type': 'application/x-www-form-urlencoded',
            'authorization': 'Bearer {YOUR-JWT-TOKEN}'
          }
        };

        request(options, function(error, response, body) {
          if (error) throw new Error(error);

          console.log(body);
        });
  responses:
    204:
      description: No Content. 등록 성공
      schema:
        type: object
    401:
      description: Unauthorized. 인증 실패
      schema:
        type: object
        properties:
          msg:
            type: string
            description: 에러 메세지
            example: "Check your access token. Your input: undefined."
          code:
            type: integer
            description: 에러 코드
            example: -601
          desc:
            type: string
            description: 에러 설명
            example: "[Auth] JWT 오류. 토큰값이 필요합니다"
    404:
      description: Not Found. 존재하지 않는 이용자
      schema:
        type: object
        properties:
          msg:
            type: string
            description: 에러 메세지
            example: "user_id '{USER_ID}' is not exist."
          code:
            type: integer
            description: 에러 코드
            example: -3861
          desc:
            type: string
            description: 에러 설명
            example: "[API] 이용자 오류. 등록되지 않은 이용자 입니다."