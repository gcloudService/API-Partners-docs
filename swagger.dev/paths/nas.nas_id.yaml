get:
  summary: NAS 상세정보
  description: |
    NAS 상세정보를 조회합니다.

    ### cURL
    ```
    curl -X GET \
      http://10.222.222.227:3000/v1/nas/nas_1 \
      -H 'authorization: Bearer {YOUR-JWT-TOKEN}' \
      -H 'cache-control: no-cache' \
      -H 'content-type: application/x-www-form-urlencoded' \
    ```
  tags:
    - Nas
  produces:
    - application/json
  parameters:
    - $ref: ../parameters/index.yaml#/nas_id
  x-code-samples:
    - lang: PHP
      source: |
        <?php
        $curl = curl_init();

        curl_setopt_array($curl, array(
          CURLOPT_PORT => "3000",
          CURLOPT_URL => "http://10.222.222.227:3000/v1/nas/nas_1",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "GET",
          CURLOPT_HTTPHEADER => array(
            "authorization: Bearer {YOUR-JWT-TOKEN}",
            "cache-control: no-cache",
            "content-type: application/x-www-form-urlencoded",
          ),
        ));

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);
    - lang: Node.js
      source: |
        var request = require("request");

        var options = {
            method: 'GET',
            url: 'http://10.222.222.227:3000/v1/nas/nas_1',
            headers: {
                'cache-control': 'no-cache',
                'content-type': 'application/x-www-form-urlencoded',
                'authorization': 'Bearer {YOUR-JWT-TOKEN}'
            }
        };

        request(options, function(error, response, body) {
            if (error) throw new Error(error);

            console.log(body);
        });
  responses:
    200:
      description: OK. NAS 상세정보 조회 성공
      schema:
        $ref: ../definitions/Nas.yaml
    400:
      description: Bad request. 파라미터 오류
      schema:
        $ref: ../definitions/BadRequest.yaml
    401:
      description: Unauthorized. 인증 실패
      schema:
        $ref: ../definitions/Unauthorized.yaml
    403:
      description: Forbidden. NAS가 파트너/사용자의 자원이 아닌 경우
      schema:
        $ref: ../definitions/PermissionDeny.yaml
    404:
      description: Not Found. 존재하지 않음
      schema:
        $ref: ../definitions/NotFound.yaml
put:
  summary: NAS 변경
  description: |
    NAS 이름, 설명 변경합니다.
    - **name**, **desc** 둘 중 하나는 반드시 필요합니다.
    - 요청한 **name**, **desc**가 기존의 데이터와 일치하면 변경하지 않습니다.

    ### cURL
    ```
    curl -X PUT \
      http://10.222.222.227:3000/v1/nas/nas_1 \
      -H 'authorization: Bearer {YOUR-JWT-TOKEN}' \
      -H 'cache-control: no-cache' \
      -H 'content-type: application/x-www-form-urlencoded' \
      -d 'name=new-name&desc=new-desc'
    ```

    ### Error Code
    - `-4713` : [API] NAS 수정 오류. NAS명 중복
  tags:
    - Nas
  produces:
    - application/json
  parameters:
    - $ref: ../parameters/index.yaml#/nas_id
    - $ref: ../parameters/index.yaml#/nas_name
    - $ref: ../parameters/index.yaml#/nas_desc
  x-code-samples:
    - lang: PHP
      source: |
        <?php
        $curl = curl_init();

        curl_setopt_array($curl, array(
          CURLOPT_PORT => "3000",
          CURLOPT_URL => "http://10.222.222.227:3000/v1/nas/nas_1",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "PUT",
          CURLOPT_POSTFIELDS => "name=new-name&desc=new-desc",
          CURLOPT_HTTPHEADER => array(
            "authorization: Bearer {YOUR-JWT-TOKEN}",
            "cache-control: no-cache",
            "content-type: application/x-www-form-urlencoded",
          ),
        ));

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);
    - lang: Node.js
      source: |
        var request = require("request");

        var options = {
            method: 'PUT',
            url: 'http://10.222.222.227:3000/v1/nas/nas_1',
            headers: {
                'cache-control': 'no-cache',
                'content-type': 'application/x-www-form-urlencoded',
                'authorization': 'Bearer {YOUR-JWT-TOKEN}'
            },
            form: {
              'name': 'new-name'
              'desc': 'new-desc'
            }
        };

        request(options, function(error, response, body) {
            if (error) throw new Error(error);

            console.log(body);
        });
  responses:
    200:
      description: OK. 기존과 같은 이름, 설명이기 때문에 기존 정보 반환
      schema:
        $ref: ../definitions/Nas.yaml
    201:
      description: Created. 이름, 설명 변경 성공
      schema:
        $ref: ../definitions/Nas.yaml
    400:
      description: Bad request. 파라미터 오류
      schema:
        $ref: ../definitions/BadRequest.yaml
    401:
      description: Unauthorized. 인증 실패
      schema:
        $ref: ../definitions/Unauthorized.yaml
    403:
      description: Forbidden. nas_id NAS가 파트너/사용자의 자원이 아닌 경우
      schema:
        $ref: ../definitions/PermissionDeny.yaml
    404:
      description: Not Found. 존재하지 않음
      schema:
        $ref: ../definitions/NotFound.yaml
delete:
  summary: NAS 삭제
  description: |
    NAS 삭제를 삭제합니다.
    - 사용자가 직접 생성한 NAS만 삭제할 수 있습니다.

    ### cURL
    ```
    curl -X DELETE \
      http://10.222.222.227:3000/v1/nas/nas_1 \
      -H 'authorization: Bearer {YOUR-JWT-TOKEN}' \
      -H 'cache-control: no-cache' \
      -H 'content-type: application/x-www-form-urlencoded' \
    ```

    ### Error Code
    - `-4715` : [API] NAS 삭제 오류. NAS 삭제 불가 상태. 운영중인 NAS만 삭제 가능합니다.
  tags:
    - Nas
  produces:
    - application/json
  parameters:
    - $ref: ../parameters/index.yaml#/nas_id
  x-code-samples:
    - lang: PHP
      source: |
        <?php
        $curl = curl_init();

        curl_setopt_array($curl, array(
          CURLOPT_PORT => "3000",
          CURLOPT_URL => "http://10.222.222.227:3000/v1/nas/nas_1",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "DELETE",
          CURLOPT_HTTPHEADER => array(
            "authorization: Bearer {YOUR-JWT-TOKEN}",
            "cache-control: no-cache",
            "content-type: application/x-www-form-urlencoded",
          ),
        ));

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);
    - lang: Node.js
      source: |
        var request = require("request");

        var options = {
            method: 'DELETE',
            url: 'http://10.222.222.227:3000/v1/nas/nas_1',
            headers: {
                'cache-control': 'no-cache',
                'content-type': 'application/x-www-form-urlencoded',
                'authorization': 'Bearer {YOUR-JWT-TOKEN}'
            }
        };

        request(options, function(error, response, body) {
            if (error) throw new Error(error);

            console.log(body);
        });
  responses:
    202:
      description: Accepted. NAS 삭제 요청 성공
      schema:
        $ref: ../definitions/Nas.yaml
    400:
      description: Bad request. 파라미터 오류
      schema:
        $ref: ../definitions/BadRequest.yaml
    401:
      description: Unauthorized. 인증 실패
      schema:
        $ref: ../definitions/Unauthorized.yaml
    403:
      description: Forbidden. nas_id 파트너/사용자의 자원이 아닌 경우
      schema:
        $ref: ../definitions/PermissionDeny.yaml
    404:
      description: Not Found. nas_id 존재하지 않음
      schema:
        $ref: ../definitions/NotFound.yaml