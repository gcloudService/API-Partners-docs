post:
  summary: 볼륨 스토리지 장착/추가
  description: |
    g클라우드 서버에 g클라우드 스토리지를 장착하거나 추가할 수 있습니다.
    - g클라우드 서버의 상태 값이 정지된 상태(status: 01)일 때만 g클라우드 스토리지(볼륨 스토리지)를 장착하거나 추가할 수 있습니다.
    - g클라우드 서버(SSD)는 볼륨 스토리지를 장착할 수 없습니다.
    - g클라우드 스토리지는 부착/추가 후 별도의 마운트가 필요합니다.
      - [리눅스 서버에 마운트하는 방법](https://customer.gabia.com/manuals/detail.php.php?seq_no=1340)
      - [윈도우 서버에 마운트하는 방법](https://customer.gabia.com/manuals/detail.php.php?seq_no=1728)



    ### cURL
    ```
    curl -X POST \
      http://10.222.222.227:3000/v1/servers/vm_1/volumes/vol_1 \
      -H 'authorization: Bearer {YOUR-JWT-TOKEN}' \
      -H 'cache-control: no-cache' \
      -H 'content-type: application/x-www-form-urlencoded' \
    ```

    ### Error Code
    - `-4141` : [API] 서버 볼륨 장착 오류. 서버 장착 불가 상태. 정지 상태에서만 가능합니다.
    - `-4142` : [API] 서버 볼륨 장착 오류. 서버 장착 불가 상태. ssd 서버에 볼륨 부착 불가.
  tags:
    - Servers
    - Volumes
  parameters:
    - $ref: ../parameters/index.yaml#/svr_id
    - $ref: ../parameters/index.yaml#/vol_id
  produces:
    - application/json
  x-code-samples:
    - lang: PHP
      source: |
        <?php
        $curl = curl_init();

        curl_setopt_array($curl, array(
          CURLOPT_PORT => "3000",
          CURLOPT_URL => "http://10.222.222.227:3000/v1/servers/vm_1/volumes/vol_1",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "POST",
          CURLOPT_HTTPHEADER => array(
            "authorization: Bearer {YOUR-JWT-TOKEN}",
            "cache-control: no-cache",
            "content-type: application/x-www-form-urlencoded",
          ),
        ));

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);
    - lang: Node.js
      source: |
        var request = require("request");

        var options = {
          method: 'POST',
          url: 'http://10.222.222.227:3000/v1/servers/vm_1/volumes/vol_1',
          headers: {
            'cache-control': 'no-cache',
            'content-type': 'application/x-www-form-urlencoded',
            'authorization': 'Bearer {YOUR-JWT-TOKEN}'
          }
        };

        request(options, function(error, response, body) {
            if (error) throw new Error(error);

            console.log(body);
        });
  responses:
    201:
      description: |
        Created. 볼륨 스토리지 장착/추가 성공
      schema:
        $ref: ../definitions/Servers.yaml
    400:
      description: Bad request. 파라미터 오류
      schema:
        $ref: ../definitions/BadRequest.yaml
    401:
      description: Unauthorized. 인증 실패
      schema:
        $ref: ../definitions/Unauthorized.yaml
    403:
      description: Forbidden. 서버/볼륨이 파트너/사용자의 자원이 아닌 경우
      schema:
        $ref: ../definitions/PermissionDeny.yaml
    404:
      description: Not Found. 존재하지 않음
      schema:
        $ref: ../definitions/NotFound.yaml
delete:
  summary: 볼륨 스토리지 해제
  description: |
    g클라우드 서버에 장착된 g클라우드 스토리지를 해제할 수 있습니다.
    - g클라우드 서버의 상태 값이 정지된 상태(status: 01)일 때만 g클라우드 스토리지(볼륨 스토리지)를 해제할 수 있습니다.
    - g클라우드 스토리지는 해제 후 별도의 마운트 해제가 필요합니다.
      - [리눅스 서버에 마운트 해제하는 방법](https://customer.gabia.com/manuals/detail.php.php?seq_no=1341)
      - [윈도우 서버에 마운트 해제하는 방법](https://customer.gabia.com/manuals/detail.php.php?seq_no=1730)



    ### cURL
    ```
    curl -X DELETE \
      http://10.222.222.227:3000/v1/servers/vm_1/volumes/vol_1 \
      -H 'authorization: Bearer {YOUR-JWT-TOKEN}' \
      -H 'cache-control: no-cache' \
      -H 'content-type: application/x-www-form-urlencoded' \
    ```

    ### Error Code
    - `-4141` : [API] 서버 볼륨 해제 오류. 서버 해제 불가 상태. 정지 상태에서만 가능합니다.
    - `-4142` : [API] 서버 볼륨 해제 오류. 서버 해제 불가 상태. ssd 서버에 볼륨 해제 불가.
  tags:
    - Servers
    - Volumes
  parameters:
    - $ref: ../parameters/index.yaml#/svr_id
    - $ref: ../parameters/index.yaml#/vol_id
  produces:
    - application/json
  x-code-samples:
    - lang: PHP
      source: |
        <?php
        $curl = curl_init();

        curl_setopt_array($curl, array(
          CURLOPT_PORT => "3000",
          CURLOPT_URL => "http://10.222.222.227:3000/v1/servers/vm_1/volumes/vol_1",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "DELETE",
          CURLOPT_HTTPHEADER => array(
            "authorization: Bearer {YOUR-JWT-TOKEN}",
            "cache-control: no-cache",
            "content-type: application/x-www-form-urlencoded",
          ),
        ));

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);
    - lang: Node.js
      source: |
        var request = require("request");

        var options = {
            method: 'DELETE',
            url: 'http://10.222.222.227:3000/v1/servers/vm_1/volumes/vol_1',
            headers: {
                'cache-control': 'no-cache',
                'content-type': 'application/x-www-form-urlencoded',
                'authorization': 'Bearer {YOUR-JWT-TOKEN}'
            }
        };

        request(options, function(error, response, body) {
            if (error) throw new Error(error);

            console.log(body);
        });
  responses:
    200:
      description: |
        OK. 볼륨 해제 성공
      schema:
        $ref: ../definitions/Servers.yaml
    400:
      description: Bad request. 파라미터 오류
      schema:
        $ref: ../definitions/BadRequest.yaml
    401:
      description: Unauthorized. 인증 실패
      schema:
        $ref: ../definitions/Unauthorized.yaml
    403:
      description: Forbidden. 서버/볼륨이 파트너/사용자의 자원이 아닌 경우
      schema:
        $ref: ../definitions/PermissionDeny.yaml
    404:
      description: Not Found. 존재하지 않음
      schema:
        $ref: ../definitions/NotFound.yaml